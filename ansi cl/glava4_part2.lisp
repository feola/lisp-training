;;---------------------------------------------------
;; Строки - это векторы, состоящие из знаков
;; Строка - набор знаков в кавычках
;; Одиночный знак задаётся через #\

"это строка"

;; => "это строка"

#\c

;; => #\c

;;---------------------------------------------------
;; Каждый знак соответствует определённому целому числу
;; char-code - возвращает связанное со знаком число
;; code-char - возвращает связанный с числом знак

(char-code #\c)

;; => 99

(char-code #\n)

;; => 110

(code-char 100)

;; => #\d

;; Поэтому для знаков существуют функции сравнения:
;; char<
;; char<=
;; char=
;; char>=
;; char>
;; char/=

(sort "elbow" #'char<)

;; => "below"

;;---------------------------------------------------
;; char - специализированная функция, которая позволяет получить знак,
;; находящийся в определённой позиции

(char "abc" 1)

;; => #\b

;; char может быть использована вместе с setf для замены элементов

(let ((str (copy-seq "Merlin")))
  (setf (char str 3) #\k)
  str)

;; => "Merkin"

;;---------------------------------------------------
;; string-equal - позволяет сравнивать строки, не учитывая регистр букв

(equal "fred" "fred")

;; => T

(equal "fred" "Fred")

;; => NIL

(string-equal "fred" "Fred")

;; => T

;;---------------------------------------------------
;; format nil - возвращает строку, вместо того, чтобы её напечатать

(format nil "~A or ~A" "truth" "dare")

;; => "truth or dare"

;;---------------------------------------------------
;; concatenate - соединяет несколько строк

(concatenate 'string "not " "to worry")

;; => "not to worry"
